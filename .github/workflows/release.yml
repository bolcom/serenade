name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  RELEASE_NAME: 'Serenade'
  WINDOWS_TARGET: 'x86_64-Windows.zip'
  MACOS_TARGET: 'x86_64-MacOSX.tar.gz'
  LINUX_TARGET: 'x86_64-Ubuntu.tar.gz'

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: cargo build --all --release

      - name: Release binaries
        shell: bash
        run: |
          cd target/release
          tar czvf ../../${{ env.RELEASE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.LINUX_TARGET }} tpe_hyperparameter_optm serving
          cd -

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.RELEASE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.LINUX_TARGET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    
    steps:
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Build
        run: cargo build --all --release

      - name: Release binaries
        shell: bash
        run: |
          cd target/release
          tar czvf ../../${{ env.RELEASE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.MACOS_TARGET }} tpe_hyperparameter_optm serving
          cd -

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.RELEASE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.MACOS_TARGET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-win:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        target: x86_64-pc-windows-gnu

    steps:
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: cargo build --all --release

      - name: Release binaries
        shell: bash
        run: |
          cd target/release
          zip ../../${{ env.RELEASE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.WINDOWS_TARGET }} tpe_hyperparameter_optm serving
          cd -

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.RELEASE_NAME }}-${{ steps.get_version.outputs.VERSION }}-${{ env.WINDOWS_TARGET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
